mat-menu(
    '#menuBasics'=''
)
    button('mat-menu-item'='', '(click)'='setScreen("basics/name")') Name
    button('mat-menu-item'='', '(click)'='setScreen("basics/species")') Species
    button('mat-menu-item'='', '(click)'='setScreen("basics/trainer")') Trainer

mat-menu(
    '#menuStats'=''
)
    button('mat-menu-item'='', '(click)'='setScreen("stats/general")') General
    button('mat-menu-item'='', '(click)'='setScreen("stats/level")') Level
    button('mat-menu-item'='', '(click)'='setScreen("stats/ev")') EV
    button('mat-menu-item'='', '(click)'='setScreen("stats/dv")') DV
    button('mat-menu-item'='', '(click)'='setScreen("stats/exp")') Exp

mat-menu(
    '#menuShortcuts'=''
)
    button('mat-menu-item'='', '(click)'='doHeal()', '[disabled]'='isHealed') Heal
    mat-divider
    button('mat-menu-item'='', '(click)'='doMaxLevel()', '[disabled]'='isMaxLevel') Max Level
    button('mat-menu-item'='', '(click)'='maxPPUps()', '[disabled]'='isMaxPPUps') Max PP Ups
    button('mat-menu-item'='', '(click)'='doMaxEVs()', '[disabled]'='isMaxEVs') Max EV's
    button('mat-menu-item'='', '(click)'='doResetEVs()', '[disabled]'='isMinEVs') Reset EV's
    button('mat-menu-item'='', '(click)'='doReRollDVs()') Re-Roll DV's
    button('mat-menu-item'='', '(click)'='doMaxDVs()', '[disabled]'='isMaxDVs') Max DV's
    mat-divider
    button('mat-menu-item'='', '(click)'='doFullyMaxed()', '[disabled]'='isFullyMaxed') Max Out
    button('mat-menu-item'='', '(click)'='doFullReset()', '[disabled]'='isFullyReset') Full Reset
    mat-divider
    button('mat-menu-item'='', '(click)'='makeTradeMon()', '[disabled]'='isTradedMon') Make Traded Pokemon
    button('mat-menu-item'='', '(click)'='makeOwnMon()', '[disabled]'='!isTradedMon') Make Own Pokemon
    mat-divider
    button('mat-menu-item'='', '(click)'='makeNickname()', '[disabled]'='isNicknamed == true') Make Nicknamed
    button('mat-menu-item'='', '(click)'='makeOwnName()', '[disabled]'='isNicknamed == false') Make Own Name
    mat-divider
    button('mat-menu-item'='', '(click)'='onWithdrawDeposit.emit()', '*ngIf'='!partyMon') Withdraw from PC
    button('mat-menu-item'='', '(click)'='onWithdrawDeposit.emit()', '*ngIf'='partyMon') Deposit to PC
    button('mat-menu-item'='', '(click)'='rem.emit()') Delete

.menu
    button(
        'mat-button'=''
        '[matMenuTriggerFor]'="menuBasics"
    ) Basics

    button(
        'mat-button'=''
        '[matMenuTriggerFor]'="menuStats"
    ) Stats

    button(
        'mat-button'=''
        '(click)'='setScreen("health")'
    ) Health

    button(
        'mat-button'=''
        '(click)'='setScreen("moves")'
    ) Moves

    button(
        'mat-button'=''
        '[matMenuTriggerFor]'="menuShortcuts"
    ) Actions

.screen(
    '*ngIf'='screen == "basics/name"'
)
    name-input-box(
        'label'='Nickname'
        '[(ngModel)]'='entry.nickname'
        '[disabled]'='disabled'
        'template'='<<t>><<c("\'s")>><br><<c("hurt by poison!")>>'
    )

.screen(
    '*ngIf'='screen == "basics/species"'
)
    select-species(
        '[(ngModel)]'='entry.species'
        '(ngModelChange)'="onSpeciesChange()"
        '[disabled]'='disabled'
    )

    select-type(
        '[(ngModel)]'='entry.type1'
        '[disabled]'='disabled'
    )

    select-type(
        '[(ngModel)]'='entry.type2'
        '[disabled]'='disabled'
    )

    mat-form-field
        mat-label Catch Rate
        input(
            matInput=''
            placeholder='Catch Rate'
            type='number'
            '[(ngModel)]'='entry.catchRate'
            '[disabled]'='disabled'
            'min'='0'
            'max'='255'
        )

.screen(
    '*ngIf'='screen == "basics/trainer"'
)

    name-input-box(
        'label'='OT Name'
        '[(ngModel)]'='entry.otName'
        '[disabled]'='disabled'
        'template'='<<t>>'
        'maxlength'='7'
        '[bg]'='false'
        '[textBlack]'='false'
    )

    mat-form-field.align-top
        mat-label OT ID
        input(
            matInput=''
            placeholder='OT ID'
            type='text'
            '[(ngModel)]'='entry.otID'
            '[disabled]'='disabled'
            minlength='4'
            maxlength='4'
        )

.screen(
    '*ngIf'='screen == "stats/general" && entry.isValidPokemon !== false'
)
    div
        span.header HP
        span {{entry.maxHP || entry.hpStat}}
    div
        span.header Attack
        span {{entry.attack || entry.attackStat}}
    div
        span.header Defense
        span {{entry.defense || entry.defenseStat}}
    div
        span.header Speed
        span {{entry.speed || entry.speedStat}}
    div
        span.header Special
        span {{entry.special || entry.specialStat}}

.screen(
    '*ngIf'='screen == "stats/general" && entry.isValidPokemon === false'
)
    mat-form-field
        mat-label HP
        input(
            matInput=''
            type='number'
            '[(ngModel)]'='entry.maxHP'
            '[disabled]'='disabled || entry.maxHP === undefined'
        )

    mat-form-field
        mat-label Attack
        input(
            matInput=''
            type='number'
            '[(ngModel)]'='entry.attack'
            '[disabled]'='disabled || entry.attack === undefined'
        )

    mat-form-field
        mat-label Defense
        input(
            matInput=''
            type='number'
            '[(ngModel)]'='entry.defense'
            '[disabled]'='disabled || entry.defense === undefined'
        )

    mat-form-field
        mat-label Speed
        input(
            matInput=''
            type='number'
            '[(ngModel)]'='entry.speed'
            '[disabled]'='disabled || entry.speed === undefined'
        )

    mat-form-field
        mat-label Special
        input(
            matInput=''
            type='number'
            '[(ngModel)]'='entry.special'
            '[disabled]'='disabled || entry.special === undefined'
        )

.screen(
    '*ngIf'='screen == "stats/level"'
)
    h4.center-text {{entry.level}}

    mat-progress-spinner.center(
        'color'='primary',
        'mode'='determinate',
        '[value]'='entry.level'
    )

    mat-slider.max-width(
        matInput=''
        '[min]'='1',
        '[max]'='100',
        '[thumbLabel]'='true',
        '[(ngModel)]'="entry.level"
        '(ngModelChange)'="updateData()"
        '[disabled]'='disabled'
    )

.screen(
    '*ngIf'='screen == "stats/ev"'
)
    mat-label HP EV
    mat-slider.max-width(
            'min'='0',
            'max'='65535',
            '[thumbLabel]'='true',
            '[(ngModel)]'="entry.hpExp"
            '(ngModelChange)'="updateData()"
            '[disabled]'='disabled'
        )

    mat-label Attack EV
    mat-slider.max-width(
            'min'='0',
            'max'='65535',
            '[thumbLabel]'='true',
            '[(ngModel)]'="entry.attackExp"
            '(ngModelChange)'="updateData()"
            '[disabled]'='disabled'
        )

    mat-label Defense EV
    mat-slider.max-width(
            'min'='0',
            'max'='65535',
            '[thumbLabel]'='true',
            '[(ngModel)]'="entry.defenseExp"
            '(ngModelChange)'="updateData()"
            '[disabled]'='disabled'
        )

    mat-label Speed EV
    mat-slider.max-width(
            'min'='0',
            'max'='65535',
            '[thumbLabel]'='true',
            '[(ngModel)]'="entry.speedExp"
            '(ngModelChange)'="updateData()"
            '[disabled]'='disabled'
        )

    mat-label Special EV
    mat-slider.max-width(
            'min'='0',
            'max'='65535',
            '[thumbLabel]'='true',
            '[(ngModel)]'="entry.specialExp"
            '(ngModelChange)'="updateData()"
            '[disabled]'='disabled'
        )

.screen(
    '*ngIf'='screen == "stats/dv"'
)
    mat-label HP DV
    mat-slider.max-width(
            'min'='0',
            'max'='15',
            '[thumbLabel]'='true',
            '[(ngModel)]'="entry.hpDV"
            '[disabled]'='true'
        )

    mat-label Attack DV
    mat-slider.max-width(
            'min'='0',
            'max'='15',
            '[thumbLabel]'='true',
            '[(ngModel)]'="entry.dv.attack"
            '(ngModelChange)'="updateData()"
            '[disabled]'='disabled'
        )

    mat-label Defense DV
    mat-slider.max-width(
            'min'='0',
            'max'='15',
            '[thumbLabel]'='true',
            '[(ngModel)]'="entry.dv.defense"
            '(ngModelChange)'="updateData()"
            '[disabled]'='disabled'
        )

    mat-label Speed DV
    mat-slider.max-width(
            'min'='0',
            'max'='15',
            '[thumbLabel]'='true',
            '[(ngModel)]'="entry.dv.speed"
            '(ngModelChange)'="updateData()"
            '[disabled]'='disabled'
        )

    mat-label Special DV
    mat-slider.max-width(
            'min'='0',
            'max'='15',
            '[thumbLabel]'='true',
            '[(ngModel)]'="entry.dv.special"
            '(ngModelChange)'="updateData()"
            '[disabled]'='disabled'
        )

.screen(
    '*ngIf'='screen == "stats/exp" && entry.isValidPokemon !== false'
)
        h4.center-text {{entry.exp}}

        mat-progress-spinner.center(
            'color'='primary',
            'mode'='determinate',
            '[value]'='entry.expPercent * 100'
        )

        mat-slider.max-width(
            '[min]'='entry.expStart',
            '[max]'='entry.expEnd',
            '[thumbLabel]'='true',
            '[(ngModel)]'="entry.exp"
            '[disabled]'='disabled'
        )

.screen(
    '*ngIf'='screen == "stats/exp" && entry.isValidPokemon === false'
)
    mat-form-field
        mat-label Exp
        input(
            matInput=''
            placeholder='Exp'
            type='number'
            '[(ngModel)]'='entry.exp'
            '[disabled]'='disabled'
        )

.screen(
    '*ngIf'='screen == "health" && entry.isValidPokemon !== false'
)
    select-status.flex-right(
        '[(ngModel)]'='entry.status'
        '[disabled]'='disabled'
    )

    h4.center-text {{entry.hp}}

    mat-progress-spinner.center(
        'color'='primary',
        'mode'='determinate',
        '[value]'='(entry.hp / (entry.maxHP || entry.hpStat || 1)) * 100'
    )

    mat-slider.max-width(
        '[min]'='0',
        '[max]'='entry.maxHP || entry.hpStat || 1',
        '[thumbLabel]'='true',
        '[(ngModel)]'="entry.hp"
        '[disabled]'='disabled'
    )

.screen(
    '*ngIf'='screen == "health" && entry.isValidPokemon === false'
)
    select-status.inline-block(
        '[(ngModel)]'='entry.status'
        '[disabled]'='disabled'
    )

    mat-form-field
        mat-label Cur HP
        input(
            matInput=''
            placeholder='Cur HP'
            type='number'
            '[(ngModel)]'='entry.hp'
            '[disabled]'='disabled'
        )

    mat-form-field
        mat-label Max HP
        input(
            matInput=''
            placeholder='Cur HP'
            type='number'
            '[(ngModel)]'='entry.maxHP'
            '[disabled]'='disabled || entry.maxHP === undefined'
        )

.screen(
    '*ngIf'='screen == "moves"'
)
    .move-entry(*ngFor='let move of entry.moves; let i = index')
        select-moves(
            '[(ngModel)]'='entry.moves[i].moveID'
            '(ngModelChange)'="onMoveChange($event, move)"
            '[disabled]'='disabled'
            '[species]'='entry.species'
        )

        mat-form-field
            mat-label Cur PP
            input(
                matInput=''
                placeholder='Cur PP'
                type='number'
                '[(ngModel)]'='entry.moves[i].pp'
                '[disabled]'='disabled'
            )

        mat-form-field
            mat-label Max PP
            input(
                matInput=''
                placeholder='Max PP'
                type='text'
                '[value]'='maxPP(move.moveID, move)'
                '[disabled]'='true'
            )

        mat-form-field
            mat-label PP Up
            mat-select(
                '[(ngModel)]'='entry.moves[i].ppUp'
                '(selectionChange)'="onPpUpChange(move)"
                '[disabled]'='disabled'
            )
                mat-option('[value]'='0') 0
                mat-option('[value]'='1') 1
                mat-option('[value]'='2') 2
                mat-option('[value]'='3') 3
